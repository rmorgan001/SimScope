; Script generated by the ASCOM Driver Installer Script Generator 6.2.0.0
; Generated by Robert Morgan on 5/20/2018 (UTC)
[Setup]
AppVerName=ASCOM SimScope 1.0.0.0
AppVersion=1.0.0.0
VersionInfoVersion=1.0.0.0
OutputBaseFilename="ASCOMSimScope1000Setup"
AppID={{0ff78bd6-6149-4536-9252-3da68b94f7c2}
AppName=ASCOM SimScope
AppPublisher=Robert Morgan <robert.morgan.e@gmail.com>
AppPublisherURL=mailto:robert.morgan.e@gmail.com
AppSupportURL=https://ascomtalk.groups.io/g/Developer/topics
AppUpdatesURL=http://ascom-standards.org/
MinVersion=0,5.0.2195sp4
DefaultDirName="{cf}\ASCOM\Telescope\SimScope"
DefaultGroupName="SimScope"
DisableDirPage=yes
DisableProgramGroupPage=yes
OutputDir="."
Compression=lzma
SolidCompression=yes
; Put there by Platform if Driver Installer Support selected
WizardImageFile="C:\Users\Rob\source\repos\SimScope\Installer\WizardImage.bmp"
LicenseFile="C:\Users\Rob\source\repos\SimScope\Installer\license.txt"
; {cf}\ASCOM\Uninstall\Telescope folder created by Platform, always
UninstallFilesDir="{cf}\ASCOM\Uninstall\Telescope\SimScope"

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Dirs]
Name: "{cf}\ASCOM\Uninstall\Telescope\SimScope\"
Name: "{cf}\ASCOM\Uninstall\Telescope\SimScope\Drivers\"
; TODO: Add subfolders below {app} as needed (e.g. Name: "{app}\MyFolder")

[Files]
Source: "C:\Users\Rob\source\repos\SimScope\Builds\Release\*.*"; DestDir: "{app}"
Source: "C:\Users\Rob\source\repos\SimScope\Builds\Release\Drivers\*.*"; DestDir: "{app}\Drivers";
; Require a read-me to appear after installation, maybe driver's Help doc
; Source: "C:\Users\Rob\source\repos\GSSolution\Manuals\SimScope.pdf"; DestDir: "{app}"; Flags: isreadme
; TODO: Add other files needed by your driver here (add subfolders above)

[Icons]
Name: "{group}\SimScope"; Filename: "{app}\SimServer.exe"

; Only if driver is .NET
[Run]

; Only for .NET local-server drivers
Filename: "{app}\SimServer.exe"; Parameters: "/register"

; Only if driver is .NET
[UninstallRun]
; This helps to give a clean uninstall

; Only for .NET local-server drivers, use /unprofile to remove ascom profile 
Filename: "{app}\SimServer.exe"; Parameters: "/unregister /unprofile"

[CODE]
//
// Before the installer UI appears, verify that the (prerequisite)
// ASCOM Platform 6.2 or greater is installed, including both Helper
// components. Utility is required for all types (COM and .NET)!
//
function InitializeSetup(): Boolean;
var
   U: Variant;
   H: Variant;
begin
   Result := FALSE;  // Assume failure
   // check that the DriverHelper and Utilities objects exist, report errors if they don't
   try
      H := CreateOleObject('DriverHelper.Util');
   except
      MsgBox('The ASCOM DriverHelper object has failed to load, this indicates a serious problem with the ASCOM installation', mbInformation, MB_OK);
   end;
   try
      U := CreateOleObject('ASCOM.Utilities.Util');
   except
      MsgBox('The ASCOM Utilities object has failed to load, this indicates that the ASCOM Platform has not been installed correctly', mbInformation, MB_OK);
   end;
   try
      if (U.IsMinimumRequiredVersion(6,2)) then	// this will work in all locales
         Result := TRUE;
   except
   end;
   if(not Result) then
      MsgBox('The ASCOM Platform 6.2 or greater is required for this driver.', mbInformation, MB_OK);
end;

// Code to enable the installer to uninstall previous versions of itself when a new version is installed
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
  UninstallExe: String;
  UninstallRegistry: String;
begin
  if (CurStep = ssInstall) then // Install step has started
	begin
      // Create the correct registry location name, which is based on the AppId
      UninstallRegistry := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#SetupSetting("AppId")}' + '_is1');
      // Check whether an extry exists
      if RegQueryStringValue(HKLM, UninstallRegistry, 'UninstallString', UninstallExe) then
        begin // Entry exists and previous version is installed so run its uninstaller quietly after informing the user
          MsgBox('Setup will now remove the previous version.', mbInformation, MB_OK);
          Exec(RemoveQuotes(UninstallExe), ' /SILENT', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
          sleep(1000);    //Give enough time for the install screen to be repainted before continuing
        end
  end;
end;